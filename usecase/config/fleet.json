{
    "_": "  vim: set expandtab shiftwidth=4 softtabstop=4: ",
    "defaults": {
        "vars": {
            "realm": "HCPHACKING.XYZ",
            "domain": "hcphacking.xyz"
        },
        "tpm_create": true,
        "tpm_enroll": true,
        "enroll_api": "https://enrollsvc.hcphacking.xyz",
        "enroll_api_cacert": "/capublic/CA.cert",
        "enroll_api_clientcert": "/enrollclient/client.pem",
        "enroll_profile": {
            "hostname": "{hostname}",
            "certgen": [ "https-server", "pkinit-client" ],
            "pkinit-clients": [ "nobody" ],
            "realm": "HCPHACKING.XYZ",
            "lifetime": "2h",
            "key-type": "rsa",
            "key-bits": 2048,
            "krb5conf": {
                "logging": {
                    "default": "STDERR"
                },
                "libdefaults": {
                    "default_realm": "HCPHACKING.XYZ",
                    "dns_lookup_kdc": "no",
                    "dns_lookup_realm": "no",
                    "ignore_acceptor_hostname": "yes",
                    "dns_canonicalize_hostname": "no",
                    "rdns": "no",
                    "forwardable": "true",
                    "kuserok": [
                        "SYSTEM-K5LOGIN:/etc/k5login.d",
                        "USER-K5LOGIN",
                        "SIMPLE"
                    ]
                },
                "appdefaults": {
                    "pkinit_anchors": "FILE:/capublic/CA.cert"
                },
                "domain_realm": {
                    ".hcphacking.xyz": "HCPHACKING.XYZ"
                },
                "realms": {
                    "HCPHACKING.XYZ": {
                        "kdc": "secondary.kdc.hcphacking.xyz:3088",
                        "pkinit_require_eku": "true",
                        "pkinit_require_krbtgt_otherName": "true",
                        "pkinit_win2k": "no",
                        "pkinit_win2k_require_binding": "yes"
                    }
                }
            },
            "ktgen": {
                "api": "https://secondary.kdc.hcphacking.xyz",
                "sshd": [ "host/{hostname}" ]
            }
        }
    },
    "fleet": {
        "kdc_primary": {
            "vars": { "hostname": "primary.kdc.hcphacking.xyz" },
            "tpm_path": "/tpm_primary.kdc",
            "enroll_profile": {
                "ktgen": [],
                "certgen": [ "https-server", "pkinit-kdc" ]
            }
        },
        "kdc_secondary": {
            "vars": { "hostname": "secondary.kdc.hcphacking.xyz" },
            "tpm_path": "/tpm_secondary.kdc",
            "enroll_profile": {
                "ktgen": [],
                "certgen": [ "https-server", "pkinit-kdc",
                             "pkinit-iprop" ],
                "krb5conf": {
                    "_": ["The point here is that kdc_secondary is the only host",
                          "that doesn't have kdc_secondary as its KDC, so we",
                          "override the setting in this one case."],
                    "realms": {
                        "HCPHACKING.XYZ": {
                            "kdc": "primary.kdc.hcphacking.xyz:3089"
                        }
                    }
                }
            }
        },
        "shell": {
            "vars": { "hostname": "shell.hcphacking.xyz" },
            "tpm_path": "/tpm_shell"
        },
        "alicia": {
            "vars": { "hostname": "alicia.hcphacking.xyz" },
            "tpm_path": "/tpm_alicia",
            "enroll_profile": {
                "pkinit-clients": [ "alicia" ]
            }
        },
        "auth_certificate": {
            "vars": { "hostname": "certificate.auth.hcphacking.xyz" },
            "tpm_path": "/tpm_auth_certificate"
        },
        "auth_kerberos": {
            "vars": { "hostname": "kerberos.auth.hcphacking.xyz" },
            "tpm_path": "/tpm_auth_kerberos",
            "enroll_profile": {
                "ktgen": {
                    "http": [ "HTTP/{hostname}" ]
                }
            }
        }
    }
}
