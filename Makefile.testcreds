# This should be included from the main Makefile, ie. not used directly

TESTCREDS_OUT := $(TOP)/_testcreds
TESTCREDS_DONE :=
TESTCREDS_CAPRIVATE := $(TESTCREDS_OUT)/caprivate
TESTCREDS_DONE += $(TESTCREDS_CAPRIVATE)/CA.cert
TESTCREDS_CAPUBLIC := $(TESTCREDS_OUT)/capublic
TESTCREDS_DONE += $(TESTCREDS_CAPUBLIC)/CA.cert
TESTCREDS_ENROLLSVC := $(TESTCREDS_OUT)/enrollsvc
TESTCREDS_DONE += $(TESTCREDS_ENROLLSVC)/server.pem
TESTCREDS_ATTESTSVC := $(TESTCREDS_OUT)/attestsvc
TESTCREDS_DONE += $(TESTCREDS_ATTESTSVC)/server.pem
TESTCREDS_ASSETSIGNER := $(TESTCREDS_OUT)/assetsigner
TESTCREDS_DONE += $(TESTCREDS_ASSETSIGNER)/key.pem
TESTCREDS_ASSETVERIFIER := $(TESTCREDS_OUT)/assetverifier
TESTCREDS_DONE += $(TESTCREDS_ASSETVERIFIER)/key.pem
TESTCREDS_ENROLLCLIENT := $(TESTCREDS_OUT)/enrollclient
TESTCREDS_DONE += $(TESTCREDS_ENROLLCLIENT)/client.pem
TESTCREDS_ENROLLHEALTHCLIENT := $(TESTCREDS_OUT)/enrollhealthclient
TESTCREDS_DONE += $(TESTCREDS_ENROLLHEALTHCLIENT)/client.pem
TESTCREDS_ATTESTNONCER := $(TESTCREDS_OUT)/attestnoncer
TESTCREDS_DONE += $(TESTCREDS_ATTESTNONCER)/key
TESTCREDS_CHILDREN := \
	$(TESTCREDS_CAPRIVATE) \
	$(TESTCREDS_CAPUBLIC) \
	$(TESTCREDS_ENROLLSVC) \
	$(TESTCREDS_ATTESTSVC) \
	$(TESTCREDS_ASSETSIGNER) \
	$(TESTCREDS_ASSETVERIFIER) \
	$(TESTCREDS_ENROLLCLIENT) \
	$(TESTCREDS_ENROLLHEALTHCLIENT) \
	$(TESTCREDS_ATTESTNONCER)
$(TESTCREDS_CHILDREN): | $(TESTCREDS_OUT)
$(TESTCREDS_OUT) $(TESTCREDS_CHILDREN):
	$Qmkdir $@

$(TESTCREDS_CAPRIVATE)/CA.cert: | $(TESTCREDS_CAPRIVATE)
	$Qcd $(TESTCREDS_CAPRIVATE) && \
		hxtool issue-certificate --self-signed --issue-ca \
		--generate-key=rsa --subject="CN=CA,DC=hcphacking,DC=xyz" \
		--lifetime=10years --certificate="FILE:CA.pem" && \
		openssl x509 -in CA.pem -outform PEM -out "CA.cert"
$(TESTCREDS_CAPUBLIC)/CA.cert: | $(TESTCREDS_CAPUBLIC)
$(TESTCREDS_CAPUBLIC)/CA.cert: $(TESTCREDS_CAPRIVATE)/CA.cert
	$Qcp $< $@
$(TESTCREDS_ENROLLSVC)/server.pem: | $(TESTCREDS_ENROLLSVC)
$(TESTCREDS_ENROLLSVC)/server.pem: $(TESTCREDS_CAPRIVATE)/CA.cert
	$Qcd $(TESTCREDS_ENROLLSVC) && \
		hxtool issue-certificate \
		--ca-certificate="FILE:$(TESTCREDS_CAPRIVATE)/CA.pem" \
		--type=https-server \
		--hostname="enrollsvc.hcphacking.xyz" \
		--subject="UID=emgmt,DC=hcphacking,DC=xyz" \
		--generate-key=rsa --key-bits=2048 \
		--certificate="FILE:server.pem"
$(TESTCREDS_ATTESTSVC)/server.pem: | $(TESTCREDS_ATTESTSVC)
$(TESTCREDS_ATTESTSVC)/server.pem: $(TESTCREDS_CAPRIVATE)/CA.cert
	$Qcd $(TESTCREDS_ATTESTSVC) && \
		hxtool issue-certificate \
		--ca-certificate="FILE:$(TESTCREDS_CAPRIVATE)/CA.pem" \
		--type=https-server \
		--hostname="attestsvc.hcphacking.xyz" \
		--subject="UID=emgmt,DC=hcphacking,DC=xyz" \
		--generate-key=rsa --key-bits=2048 \
		--certificate="FILE:server.pem"
$(TESTCREDS_ASSETSIGNER)/key.pem: | $(TESTCREDS_ASSETSIGNER)
	$Qcd $(TESTCREDS_ASSETSIGNER) && \
		openssl genrsa -out key.priv && \
		openssl rsa -pubout -in key.priv -out key.pem
$(TESTCREDS_ASSETVERIFIER)/key.pem: | $(TESTCREDS_ASSETVERIFIER)
$(TESTCREDS_ASSETVERIFIER)/key.pem: $(TESTCREDS_ASSETSIGNER)/key.pem
	$Qcp $< $@
$(TESTCREDS_ENROLLCLIENT)/client.pem: | $(TESTCREDS_ENROLLCLIENT)
$(TESTCREDS_ENROLLCLIENT)/client.pem: $(TESTCREDS_CAPRIVATE)/CA.cert
	$Qcd $(TESTCREDS_ENROLLCLIENT) && \
		hxtool issue-certificate \
		--ca-certificate="FILE:$(TESTCREDS_CAPRIVATE)/CA.pem" \
		--type=https-client \
		--hostname="orchestrator.hcphacking.xyz" \
		--subject="UID=orchestrator,DC=hcphacking,DC=xyz" \
			--email="orchestrator@hcphacking.xyz" \
		--generate-key=rsa --key-bits=2048 \
		--certificate="FILE:client.pem"
$(TESTCREDS_ENROLLHEALTHCLIENT)/client.pem: | $(TESTCREDS_ENROLLHEALTHCLIENT)
$(TESTCREDS_ENROLLHEALTHCLIENT)/client.pem: $(TESTCREDS_CAPRIVATE)/CA.cert
	$Qcd $(TESTCREDS_ENROLLHEALTHCLIENT) && \
		hxtool issue-certificate \
		--ca-certificate="FILE:$(TESTCREDS_CAPRIVATE)/CA.pem" \
		--type=https-client \
		--hostname="orchestrator.hcphacking.xyz" \
		--subject="UID=healthclient,DC=hcphacking,DC=xyz" \
			--email="healthclient@hcphacking.xyz" \
		--generate-key=rsa --key-bits=2048 \
		--certificate="FILE:client.pem"
$(TESTCREDS_ATTESTNONCER)/key: | $(TESTCREDS_ATTESTNONCER)
	$Qcd $(TESTCREDS_ATTESTNONCER) && \
		openssl rand -out key -hex 32

testcreds: $(TESTCREDS_DONE)
ifneq (,$(wildcard $(TESTCREDS_OUT)))
clean_testcreds:
	$Qrm -rf $(TESTCREDS_OUT)
clean: clean_testcreds
endif
