#!/bin/bash

echo "Initializing (persistent) kdcsvc state"

source /hcp/kdcsvc/common.sh

if [[ -f $HCP_ENROLLSVC_GLOBAL_INIT ]]; then
	echo "Error, setup_global.sh being run but already initialized:" >&2
	exit 1
fi

mkdir $HCP_KDCSVC_STATE/etc
mkdir $HCP_KDCSVC_STATE/var

# Produce kdc.conf
echo "Creating $HCP_KDCSVC_STATE/etc/kdc.conf"
cat > $HCP_KDCSVC_STATE/etc/kdc.conf << EOF
# Autogenerated from run_kdc.sh
[realms]
	$HCP_KDCSVC_REALM = {
		database_name = $HCP_KDCSVC_STATE/var/db
		key_stash_file = $HCP_KDCSVC_STATE/var/stash
		pkinit_identity = FILE:$HCP_KDCSVC_PKINIT_IDENTITY
		pkinit_anchors = FILE:$HCP_KDCSVC_ANCHOR
		kdc_ports = 88
		max_life = 12h 0m 0s
		max_renewable_life = 7d 0h 0m 0s
		default_principal_flags = +preauth
	}
EOF
if [[ ! -f $KRB5_CONFIG ]]; then
	echo "Error, no config file at '$KRB5_CONFIG'" >&2
	exit 1
fi
if [[ ! -f /etc/krb5kdc/kdc.conf ]]; then
	ln -s $KRB5_CONFIG /etc/krb5kdc/kdc.conf
fi

# Produce sudoers
echo "Creating $HCP_KDCSVC_STATE/etc/sudoers.env"
cat > $HCP_KDCSVC_STATE/etc/sudoers.env << EOF
export HCP_CONFIG_MUTATE=$HCP_CONFIG_MUTATE
export KRB5_CONFIG=$KRB5_CONFIG
export PYTHONPATH=/hcp/python
EOF
# Note, we need instance-specific content because our sudoers file gets linked
# into /etc/sudoers.d/ like any/all other cotenant services that use sudo. We
# take $HCP_ID as a unique identifier but sanitize it for use by replacing any
# non-alpha characters and converting to capital letters.
export HCP_NICEID=$(echo "$HCP_ID" | sed -e "s/[\._-]/x/g" | sed -e "s/[a-z]/\U&/g")
echo "Creating $HCP_KDCSVC_STATE/etc/sudoers"
cat > $HCP_KDCSVC_STATE/etc/sudoers << EOF
# sudo rules for kdcsvc-mgmt > /etc/sudoers.d/
Cmnd_Alias $HCP_NICEID = /hcp/kdcsvc/do_kadmin.sh
Defaults!$HCP_NICEID !lecture
Defaults!$HCP_NICEID !authenticate
Defaults!$HCP_NICEID env_file=$HCP_KDCSVC_STATE/etc/sudoers.env
www-data ALL = (root) $HCP_NICEID
EOF

echo "Initializing KDC via 'kadmin -l'"
export KRB5_KDC_PROFILE="$HCP_KDCSVC_STATE/etc/kdc.conf"
kdb5_util create -P 123456 -s

for i in shell nfs bigbrother alicia catarina; do
	kadmin.local -q "addprinc -randkey host/$i.hcphacking.xyz"
done
for i in nfs catarina; do
	kadmin.local -q "addprinc -randkey nfs/$i.hcphacking.xyz"
done
for i in kerberos.auth; do
	kadmin.local -q "addprinc -randkey HTTP/$i.hcphacking.xyz"
done
for i in root luser alicia catarina user1 user2 user3; do
	kadmin.local -q "addprinc -randkey $i"
done

# Mark it all as done (services may be polling on the existence of this file).
touch "$HCP_KDCSVC_GLOBAL_INIT"
echo "Global state now initialized"
