# This should be included from the main Makefile, ie. not used directly

TESTCREDS_OUT := $(TOP)/_testcreds
TESTCREDS_DONE :=
COMMA := ,

DOMAIN := $(shell jq -r .vars.domain usecase/fleet.json)

define add_CA
$(eval name := $(strip $1))
$(eval TESTCREDS_CA_$(name) := $(TESTCREDS_OUT)/ca_$(name))
$(eval TESTCREDS_CA_$(name)_PRIVATE := $(TESTCREDS_OUT)/ca_$(name)_private)
$(eval TESTCREDS_DONE += $(TESTCREDS_CA_$(name)))
$(TESTCREDS_CA_$(name)_PRIVATE): | $(TESTCREDS_OUT)
	$Qhxtool issue-certificate --self-signed --issue-ca \
		--generate-key=rsa --subject="CN=$(name)" \
		--lifetime=10years --certificate="FILE:$$@"
$(TESTCREDS_CA_$(name)): | $(TESTCREDS_OUT)
$(TESTCREDS_CA_$(name)): $(TESTCREDS_CA_$(name)_PRIVATE)
	$$Qopenssl x509 -in $$< -outform PEM -out $$@
endef

define add_cred_hxtool
$(eval CA := $(strip $1))
$(eval name := $(strip $2))
$(eval flags := $(strip $3))
$(eval TESTCREDS_$(name) := $(TESTCREDS_OUT)/cred_$(name))
$(eval TESTCREDS_DONE += $(TESTCREDS_$(name)))
$(TESTCREDS_$(name)): | $(TESTCREDS_OUT)
$(TESTCREDS_$(name)): $(TESTCREDS_CA_$(CA)_PRIVATE)
	$$Qhxtool issue-certificate \
		--ca-certificate="FILE:$(TESTCREDS_CA_$(CA)_PRIVATE)" \
		--certificate="FILE:$$@" \
		--generate-key=rsa --key-bits=2048 \
		$(flags)
endef

define add_cred_randkey
$(eval name := $(strip $1))
$(eval TESTCREDS_$(name) := $(TESTCREDS_OUT)/key_$(name))
$(eval TESTCREDS_DONE += $(TESTCREDS_$(name)))
$(TESTCREDS_$(name)): | $(TESTCREDS_OUT)
	$$Qopenssl rand -out $$@ -hex 32
endef

# TODO: this should be unnecessary. Replace the assetsigner/assetverifier pair
# by a certificate-based approach.
define add_cred_keypair
$(eval name := $(strip $1))
$(eval TESTCREDS_$(name)_PRIVATE := $(TESTCREDS_OUT)/signer_$(name))
$(eval TESTCREDS_$(name)_PUBLIC := $(TESTCREDS_OUT)/verifier_$(name))
$(eval TESTCREDS_DONE += $(TESTCREDS_$(name)_PUBLIC))
$(TESTCREDS_$(name)_PRIVATE): | $(TESTCREDS_OUT)
	$$Qopenssl genrsa -out $$@
$(TESTCREDS_$(name)_PUBLIC): | $(TESTCREDS_OUT)
$(TESTCREDS_$(name)_PUBLIC): $(TESTCREDS_$(name)_PRIVATE)
	$$Qopenssl rsa -pubout -in $$< -out $$@
endef

$(eval $(call add_CA,default))
$(eval $(call add_cred_hxtool,default,attestsvc, \
		--type=https-server \
		--hostname="attestsvc.$(DOMAIN)" \
		--subject="UID=attestsvc"))

$(eval $(call add_CA,httpsclient))
$(eval $(call add_cred_hxtool,httpsclient,healthhttpsclient, \
		--type=https-client \
		--subject="UID=healthhttpsclient" \
		--email="healthhttpsclient@$(DOMAIN)"))

$(eval $(call add_CA,enrollsvc))
$(eval $(call add_cred_hxtool,enrollsvc,enrollclient, \
		--type=https-client \
		--hostname="orchestrator.$(DOMAIN)" \
		--subject="UID=orchestrator" \
		--email="orchestrator@$(DOMAIN)"))

$(eval $(call add_CA,kdcsvc))
$(eval $(call add_cred_hxtool,kdcsvc,kdcclient, \
		--type=https-client \
		--hostname="attestsvc.$(DOMAIN)" \
		--subject="UID=attestsvc" \
		--email="attestsvc@$(DOMAIN)"))

$(eval $(call add_cred_randkey,attestnoncer,key))
$(eval $(call add_cred_keypair,asset))

$(TESTCREDS_OUT):
	$Qmkdir $@

testcreds: $(TESTCREDS_DONE)
ifneq (,$(wildcard $(TESTCREDS_OUT)))
clean_testcreds:
	$Qrm -rf $(TESTCREDS_OUT)
clean: clean_testcreds
endif
